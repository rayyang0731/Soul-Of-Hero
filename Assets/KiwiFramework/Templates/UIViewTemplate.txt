---
--- &ViewName&
---

---@class &ViewName&
---@field name string 指令标签名称
local _M = { _VERSION = "1.0" }
local log = Log.Create("&ViewName&")
----------------------------------------------------------------------------------

--region ----------构造函数----------

---@param tag string 界面名称
---@return &ViewName&
function _M:new(tag)
    return setmetatable({ name = tag, Facade = LuaFacade }, { __index = require(Base & ViewName &):new(tag) })
end

--endregion

--region ----------Virtual Methods----------

-----注册指令监听
--function _M:RegisterCommands()
--    
--end

-----注销指令监听
--function _M:UnregisterCommands()
--
--end

-----注销 Element(Mediator 中介器)
-----添加使用 AddMediator 方法,界面关闭时,会自动移除
--function _M:RegisterElements()
--
--end

-----当界面被创建
-----相当于MonoBehaviour.Awake
-----只操作数据, 不操作界面中的对象
--function _M:OnViewCreated()
--    log:Info("OnViewCreated")
--end

-----当界面实例化完成
-----相当于 MonoBehaviour.Start
--function _M:OnViewOpened()
--
--end

-----界面Update
-----相当于 MonoBehaviour.Update
--function _M:OnViewUpdate()
--
--end

-----界面 LateUpdate
-----相当于 MonoBehaviour.LateUpdate
--function _M:OnViewLateUpdate()
--
--end

-----当界面关闭
--function _M:OnViewClosed()
--
--end

-----当界面被删除
-----相当于 MonoBehaviour.OnDestroy
--function _M:OnViewDestroyed()
--
--end

-----当界面被拉起
-----当从其他界面回到本界面或再次打开本界面时调用
--function _M:OnViewResume()
--
--end

-----当界面显示时调用
--function _M:OnViewShow()
--
--end

-----当界面隐藏时调用
--function _M:OnViewHide()
--
--end

--endregion

return _M